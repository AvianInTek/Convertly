"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_react-confetti_dist_react-confetti_mjs"],{

/***/ "(app-pages-browser)/./node_modules/tween-functions/index.js":
/*!***********************************************!*\
  !*** ./node_modules/tween-functions/index.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\n// t: current time, b: beginning value, _c: final value, d: total duration\nvar tweenFunctions = {\n  linear: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * t / d + b;\n  },\n  easeInQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t + b;\n  },\n  easeOutQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * (t /= d) * (t - 2) + b;\n  },\n  easeInOutQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t + b;\n    } else {\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    }\n  },\n  easeInCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t + b;\n  },\n  easeOutCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  },\n  easeInOutCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * t + 2) + b;\n    }\n  },\n  easeInQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t * t + b;\n  },\n  easeOutQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  },\n  easeInOutQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t + b;\n    } else {\n      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n    }\n  },\n  easeInQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t * t * t + b;\n  },\n  easeOutQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  },\n  easeInOutQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n  },\n  easeInSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  },\n  easeOutSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  },\n  easeInOutSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  },\n  easeInExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;\n  },\n  easeOutExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;\n  },\n  easeInOutExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    if ((t /= d / 2) < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    } else {\n      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n  },\n  easeInCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  },\n  easeOutCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  },\n  easeInOutCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    } else {\n      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n  },\n  easeInElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n  },\n  easeOutElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n  },\n  easeInOutElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d / 2) === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    } else {\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n    }\n  },\n  easeInBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  },\n  easeOutBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  },\n  easeInOutBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    if ((t /= d / 2) < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    }\n  },\n  easeInBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    var v;\n    v = tweenFunctions.easeOutBounce(d - t, 0, c, d);\n    return c - v + b;\n  },\n  easeOutBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    } else {\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    }\n  },\n  easeInOutBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    var v;\n    if (t < d / 2) {\n      v = tweenFunctions.easeInBounce(t * 2, 0, c, d);\n      return v * 0.5 + b;\n    } else {\n      v = tweenFunctions.easeOutBounce(t * 2 - d, 0, c, d);\n      return v * 0.5 + c * 0.5 + b;\n    }\n  }\n};\n\nmodule.exports = tweenFunctions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tween-functions/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-confetti/dist/react-confetti.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/react-confetti/dist/react-confetti.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ReactConfetti; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var tween_functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tween-functions */ \"(app-pages-browser)/./node_modules/tween-functions/index.js\");\n\n\n\n\nfunction degreesToRads(degrees) {\n    return (degrees * Math.PI) / 180;\n}\nfunction randomRange(min, max) {\n    return min + Math.random() * (max - min);\n}\nfunction randomInt(min, max) {\n    return Math.floor(min + Math.random() * (max - min + 1));\n}\n\nvar ParticleShape;\n(function (ParticleShape) {\n    ParticleShape[ParticleShape[\"Circle\"] = 0] = \"Circle\";\n    ParticleShape[ParticleShape[\"Square\"] = 1] = \"Square\";\n    ParticleShape[ParticleShape[\"Strip\"] = 2] = \"Strip\";\n})(ParticleShape || (ParticleShape = {}));\nvar RotationDirection;\n(function (RotationDirection) {\n    RotationDirection[RotationDirection[\"Positive\"] = 1] = \"Positive\";\n    RotationDirection[RotationDirection[\"Negative\"] = -1] = \"Negative\";\n})(RotationDirection || (RotationDirection = {}));\nclass Particle {\n    constructor(context, getOptions, x, y) {\n        this.getOptions = getOptions;\n        const { colors, initialVelocityX, initialVelocityY } = this.getOptions();\n        this.context = context;\n        this.x = x;\n        this.y = y;\n        this.w = randomRange(5, 20);\n        this.h = randomRange(5, 20);\n        this.radius = randomRange(5, 10);\n        this.vx =\n            typeof initialVelocityX === 'number'\n                ? randomRange(-initialVelocityX, initialVelocityX)\n                : randomRange(initialVelocityX.min, initialVelocityX.max);\n        this.vy =\n            typeof initialVelocityY === 'number'\n                ? randomRange(-initialVelocityY, 0)\n                : randomRange(initialVelocityY.min, initialVelocityY.max);\n        this.shape = randomInt(0, 2);\n        this.angle = degreesToRads(randomRange(0, 360));\n        this.angularSpin = randomRange(-0.2, 0.2);\n        this.color = colors[Math.floor(Math.random() * colors.length)];\n        this.rotateY = randomRange(0, 1);\n        this.rotationDirection = randomRange(0, 1)\n            ? RotationDirection.Positive\n            : RotationDirection.Negative;\n    }\n    update() {\n        const { gravity, wind, friction, opacity, drawShape } = this.getOptions();\n        this.x += this.vx;\n        this.y += this.vy;\n        this.vy += gravity;\n        this.vx += wind;\n        this.vx *= friction;\n        this.vy *= friction;\n        if (this.rotateY >= 1 &&\n            this.rotationDirection === RotationDirection.Positive) {\n            this.rotationDirection = RotationDirection.Negative;\n        }\n        else if (this.rotateY <= -1 &&\n            this.rotationDirection === RotationDirection.Negative) {\n            this.rotationDirection = RotationDirection.Positive;\n        }\n        const rotateDelta = 0.1 * this.rotationDirection;\n        this.rotateY += rotateDelta;\n        this.angle += this.angularSpin;\n        this.context.save();\n        this.context.translate(this.x, this.y);\n        this.context.rotate(this.angle);\n        this.context.scale(1, this.rotateY);\n        this.context.rotate(this.angle);\n        this.context.beginPath();\n        this.context.fillStyle = this.color;\n        this.context.strokeStyle = this.color;\n        this.context.globalAlpha = opacity;\n        this.context.lineCap = 'round';\n        this.context.lineWidth = 2;\n        if (drawShape && typeof drawShape === 'function') {\n            drawShape.call(this, this.context);\n        }\n        else {\n            switch (this.shape) {\n                case ParticleShape.Circle: {\n                    this.context.beginPath();\n                    this.context.arc(0, 0, this.radius, 0, 2 * Math.PI);\n                    this.context.fill();\n                    break;\n                }\n                case ParticleShape.Square: {\n                    this.context.fillRect(-this.w / 2, -this.h / 2, this.w, this.h);\n                    break;\n                }\n                case ParticleShape.Strip: {\n                    this.context.fillRect(-this.w / 6, -this.h / 2, this.w / 3, this.h);\n                    break;\n                }\n            }\n        }\n        this.context.closePath();\n        this.context.restore();\n    }\n}\n\nclass ParticleGenerator {\n    constructor(canvas, getOptions) {\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n        this.lastNumberOfPieces = 0;\n        this.tweenInitTime = Date.now();\n        this.particles = [];\n        this.particlesGenerated = 0;\n        this.removeParticleAt = (i) => {\n            this.particles.splice(i, 1);\n        };\n        this.getParticle = () => {\n            const newParticleX = randomRange(this.x, this.w + this.x);\n            const newParticleY = randomRange(this.y, this.h + this.y);\n            return new Particle(this.context, this.getOptions, newParticleX, newParticleY);\n        };\n        this.animate = () => {\n            const { canvas, context, particlesGenerated, lastNumberOfPieces } = this;\n            const { run, recycle, numberOfPieces, debug, tweenFunction, tweenDuration, } = this.getOptions();\n            if (!run) {\n                return false;\n            }\n            const nP = this.particles.length;\n            const activeCount = recycle ? nP : particlesGenerated;\n            const now = Date.now();\n            // Initial population\n            if (activeCount < numberOfPieces) {\n                // Use the numberOfPieces prop as a key to reset the easing timing\n                if (lastNumberOfPieces !== numberOfPieces) {\n                    this.tweenInitTime = now;\n                    this.lastNumberOfPieces = numberOfPieces;\n                }\n                const { tweenInitTime } = this;\n                // Add more than one piece per loop, otherwise the number of pieces would\n                // be limitted by the RAF framerate\n                const progressTime = now - tweenInitTime > tweenDuration\n                    ? tweenDuration\n                    : Math.max(0, now - tweenInitTime);\n                const tweenedVal = tweenFunction(progressTime, activeCount, numberOfPieces, tweenDuration);\n                const numToAdd = Math.round(tweenedVal - activeCount);\n                for (let i = 0; i < numToAdd; i++) {\n                    this.particles.push(this.getParticle());\n                }\n                this.particlesGenerated += numToAdd;\n            }\n            if (debug) {\n                // Draw debug text\n                context.font = '12px sans-serif';\n                context.fillStyle = '#333';\n                context.textAlign = 'right';\n                context.fillText(`Particles: ${nP}`, canvas.width - 10, canvas.height - 20);\n            }\n            // Maintain the population\n            this.particles.forEach((p, i) => {\n                // Update each particle's position\n                p.update();\n                // Prune the off-canvas particles\n                if (p.y > canvas.height ||\n                    p.y < -100 ||\n                    p.x > canvas.width + 100 ||\n                    p.x < -100) {\n                    if (recycle && activeCount <= numberOfPieces) {\n                        // Replace the particle with a brand new one\n                        this.particles[i] = this.getParticle();\n                    }\n                    else {\n                        this.removeParticleAt(i);\n                    }\n                }\n            });\n            return nP > 0 || activeCount < numberOfPieces;\n        };\n        this.canvas = canvas;\n        const ctx = this.canvas.getContext('2d');\n        if (!ctx) {\n            throw new Error('Could not get canvas context');\n        }\n        this.context = ctx;\n        this.getOptions = getOptions;\n    }\n}\n\nconst confettiDefaults = {\n    width: typeof window !== 'undefined' ? window.innerWidth : 300,\n    height: typeof window !== 'undefined' ? window.innerHeight : 200,\n    numberOfPieces: 200,\n    friction: 0.99,\n    wind: 0,\n    gravity: 0.1,\n    initialVelocityX: 4,\n    initialVelocityY: 10,\n    colors: [\n        '#f44336',\n        '#e91e63',\n        '#9c27b0',\n        '#673ab7',\n        '#3f51b5',\n        '#2196f3',\n        '#03a9f4',\n        '#00bcd4',\n        '#009688',\n        '#4CAF50',\n        '#8BC34A',\n        '#CDDC39',\n        '#FFEB3B',\n        '#FFC107',\n        '#FF9800',\n        '#FF5722',\n        '#795548',\n    ],\n    opacity: 1.0,\n    debug: false,\n    tweenFunction: tween_functions__WEBPACK_IMPORTED_MODULE_2__.easeInOutQuad,\n    tweenDuration: 5000,\n    recycle: true,\n    run: true,\n};\nclass Confetti {\n    constructor(canvas, opts) {\n        this.lastFrameTime = Date.now();\n        this.setOptionsWithDefaults = (opts) => {\n            const computedConfettiDefaults = {\n                confettiSource: {\n                    x: 0,\n                    y: 0,\n                    w: this.canvas.width,\n                    h: 0,\n                },\n            };\n            this._options = {\n                ...computedConfettiDefaults,\n                ...confettiDefaults,\n                ...opts,\n            };\n            Object.assign(this, opts.confettiSource);\n        };\n        this.update = () => {\n            const { options: { run, onConfettiComplete, frameRate }, canvas, context, } = this;\n            // Throttle the frame rate if set\n            if (frameRate) {\n                const now = Date.now();\n                const elapsed = now - this.lastFrameTime;\n                if (elapsed < 1000 / frameRate) {\n                    this.rafId = requestAnimationFrame(this.update);\n                    return;\n                }\n                this.lastFrameTime = now - (elapsed % frameRate);\n            }\n            if (run) {\n                context.fillStyle = 'white';\n                context.clearRect(0, 0, canvas.width, canvas.height);\n            }\n            if (this.generator.animate()) {\n                this.rafId = requestAnimationFrame(this.update);\n            }\n            else {\n                if (onConfettiComplete &&\n                    typeof onConfettiComplete === 'function' &&\n                    this.generator.particlesGenerated > 0) {\n                    onConfettiComplete.call(this, this);\n                }\n                this._options.run = false;\n            }\n        };\n        this.reset = () => {\n            if (this.generator && this.generator.particlesGenerated > 0) {\n                this.generator.particlesGenerated = 0;\n                this.generator.particles = [];\n                this.generator.lastNumberOfPieces = 0;\n            }\n        };\n        this.stop = () => {\n            this.options = { run: false };\n            if (this.rafId) {\n                cancelAnimationFrame(this.rafId);\n                this.rafId = undefined;\n            }\n        };\n        this.canvas = canvas;\n        const ctx = this.canvas.getContext('2d');\n        if (!ctx) {\n            throw new Error('Could not get canvas context');\n        }\n        this.context = ctx;\n        this.generator = new ParticleGenerator(this.canvas, () => this.options);\n        this.options = opts;\n        this.update();\n    }\n    get options() {\n        return this._options;\n    }\n    set options(opts) {\n        const lastRunState = this._options?.run;\n        const lastRecycleState = this._options?.recycle;\n        this.setOptionsWithDefaults(opts);\n        if (this.generator) {\n            Object.assign(this.generator, this.options.confettiSource);\n            if (typeof opts.recycle === 'boolean' &&\n                opts.recycle &&\n                lastRecycleState === false) {\n                this.generator.lastNumberOfPieces = this.generator.particles.length;\n            }\n        }\n        if (typeof opts.run === 'boolean' && opts.run && lastRunState === false) {\n            this.update();\n        }\n    }\n}\n\nconst ref = react__WEBPACK_IMPORTED_MODULE_1__.createRef();\nclass ReactConfettiInternal extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = react__WEBPACK_IMPORTED_MODULE_1__.createRef();\n        this.canvas = props.canvasRef || ref;\n    }\n    componentDidMount() {\n        if (this.canvas.current) {\n            const opts = extractCanvasProps(this.props)[0];\n            this.confetti = new Confetti(this.canvas.current, opts);\n        }\n    }\n    componentDidUpdate() {\n        const confettiOptions = extractCanvasProps(this.props)[0];\n        if (this.confetti) {\n            this.confetti.options = confettiOptions;\n        }\n    }\n    componentWillUnmount() {\n        if (this.confetti) {\n            this.confetti.stop();\n        }\n        this.confetti = undefined;\n    }\n    render() {\n        const [confettiOptions, passedProps] = extractCanvasProps(this.props);\n        const canvasStyles = {\n            zIndex: 2,\n            position: 'absolute',\n            pointerEvents: 'none',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            ...passedProps.style,\n        };\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"canvas\", { width: confettiOptions.width, height: confettiOptions.height, ref: this.canvas, ...passedProps, style: canvasStyles }));\n    }\n}\nReactConfettiInternal.defaultProps = {\n    ...confettiDefaults,\n};\nReactConfettiInternal.displayName = 'ReactConfetti';\nfunction extractCanvasProps(props) {\n    const confettiOptions = {};\n    const refs = {};\n    const rest = {};\n    const confettiOptionKeys = [\n        ...Object.keys(confettiDefaults),\n        'confettiSource',\n        'drawShape',\n        'onConfettiComplete',\n        'frameRate',\n    ];\n    const refProps = ['canvasRef'];\n    for (const prop in props) {\n        const val = props[prop];\n        if (confettiOptionKeys.includes(prop)) {\n            confettiOptions[prop] = val;\n        }\n        else if (refProps.includes(prop)) {\n            refProps[prop] = val;\n        }\n        else {\n            rest[prop] = val;\n        }\n    }\n    return [confettiOptions, rest, refs];\n}\nconst ReactConfetti = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ReactConfettiInternal, { canvasRef: ref, ...props }));\n\n\n//# sourceMappingURL=react-confetti.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-confetti/dist/react-confetti.mjs\n"));

/***/ })

}]);